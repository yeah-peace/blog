[{"categories":["application usage"],"content":"Static sites like mine can easily use Github Pages and Cloudflare to deploy and speed up. However, it’s annoying to generate, publish and purge cache by typing every command manually. So, we can use a script to automate this process.\nThe script should be like this: (Take Hugo for example, Hexo and others should be similar.)\n1 2 3 4 5 6 7 8 9 10 11 12 13  cd /path/to/your/blog echo \"$hugo\" hugo cd public echo \"$git add .\" git add . echo \"$git commit --allow-empty-message -m ''\" git commit --allow-empty-message -m '' echo \"$git push -u origin master\" git push -u origin master echo \"Press any key to purge Cloudflare cache...\" read -s -n 1 curl -X POST \"https://api.cloudflare.com/client/v4/zones/$ID/purge_cache\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer $TOKEN\" --data '{\"purge_everything\":true}'   echo is used to split output, so that you can know its origin. Besides, purging cache by using Cloudflare API needs manual action, since after pushing new contents to Github, it takes time to take effect.\nHere is a better version.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  cd /path/to/your/blog hugo cd public echo \"# Start publishing the site.\" git add . git commit --allow-empty-message -m '' git push -u origin master echo \"# Wait for publishing to take effect.\" sleep 30 echo \"# Start purging Cloudflare cache.\" curl -X POST \"https://api.cloudflare.com/client/v4/zones/$ID/purge_cache\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer $TOKEN\" --data '{\"purge_everything\":true}' echo \"# Wait for purging to take effect.\" sleep 10 echo \"# Update finished.\"   ","description":"","tags":["hugo","cloudflare","github pages"],"title":"Update Sites with Script","uri":"/update-sites-with-script/"},{"categories":["other"],"content":"经过几天的折腾, 本站已经从 WordPress 迁移到 Hugo, 并托管在 Github Pages 上.\n迁移原因主要有下面几点.\nWordPress 使用动态页面 动态页面带来大量不必要的服务器开销. 虽然可以使用一些插件并配合 Cloudflare 减少，但 VPS 的购买是难以避免的. 而以 Hugo, Hexo 为代表的静态页面生成器就友好得多 (经济上).\nWordPress 需要 MySQL 数据库 相比于复杂的数据库, 我更喜欢 .conf, .json, .yaml, .toml 之类的纯文本配置文件. Hugo 使用的是 .toml 文件.\n静态页面可以完全缓存 本站使用了 Cloudflare 作为 CDN. 之前使用 WordPress 时, 需要配合插件才能较为舒适地缓存 html 文件. 而 Hugo 由于全是静态页面, 直接配置一个页面规则就完事了.\n更专注于博客本身 Hugo 就是为小型站点而生的, 而 WordPress 有各种功能. 我希望能专注于内容创作而不是被各种其他东西打扰.\nMarkdown 使用更舒适 相比于 WordPress 的编辑器, 我更青睐 Markdown. Markdown 将内容创作与展示分开, 使得创作者可以专注于内容. 此外, Hugo 的本地存储并使用 git 推送的特性使得离线情况也可以写博客, 而 WordPress 则必须登陆站点后台.\n不使用 Hexo 的原因是 Go 的速度比 Node.js 快, 生成静态页面只要几百毫秒.\n","description":"","tags":["hugo","wordpress","markdown"],"title":"从 Wordpress 迁移到 Hugo","uri":"/from-wordpress-to-hugo/"},{"categories":["application usage"],"content":"Now VLESS has better performance than VMess. Moreover, Xray is much more actively developed than V2Ray. So, it’s recommended to use VLESS to replace VMess.\nConfiguration is similar to this post, despite some tiny changes.\nFirst, install Xray with the command below.\n1  bash -c \"$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)\" @ install -u root   You may upgrade it by using the same command.\nSecond, open /usr/local/etc/xray/config.json and replace its content with the following one.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  { \"inbounds\": [ { \"port\": $PORT, \"listen\": \"127.0.0.1\", \"protocol\": \"vless\", \"settings\": { \"clients\": [ { \"id\": \"$UUID\", \"level\": 0 } ], \"decryption\": \"none\" }, \"streamSettings\": { \"network\": \"ws\", \"security\": \"none\", \"wsSettings\": { \"path\": \"/$PATH\" } } } ], \"outbounds\": [ { \"protocol\": \"freedom\" } ] }   At last, start the xray service.\n1  systemctl enable xray --now   If you want to completely remove xray, run this command:\n1  bash -c \"$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)\" @ remove --purge   ","description":"","tags":["vless","xray"],"title":"Use VLESS Instead of VMess","uri":"/use-vless-instead-of-vmess/"},{"categories":["application usage"],"content":"Only superuser (root) or processes with label CAP_LINUX_IMMUTABLE can run chattr.\nThe basic usage of chattr is to protect files or folders from moderation. For instance, to protect file $FILE, run this command:\n1  chattr +i $FILE   Files with attribute i cannot be deleted, renamed or modified. Links cannot be created too. To delete the mark, run the command below.\n1  chattr -i $FILE   The command lsattr is to list the attributes of current files. Here is an example.\n1  lsattr $FILE   ","description":"","tags":["chattr","lsattr"],"title":"Chattr and Lsattr Usage","uri":"/chattr-and-lsattr-usage/"},{"categories":["personal thoughts"],"content":"First, I have to say, fox does not really leave. But if you are active on the Internet these days, you may have seen memes about Firefox logo.\nAnd Mozilla made a post on its blog, saying that Remain Calm: the fox is still in the Firefox logo. But in the end, they also said this:\n For our Firefox Nightly users out there, we’re bringing back a very special version of an older logo, as a treat. Stay tuned.\n From Firefox Frontier\nSo, what’s the treat? It seems that it has appeared…\nFiredog\nFrom fox to dog, it is really a great change. It reminds me of a famous sentence, which is the quick brown fox jumps over the lazy dog.\nFirefox Nightly users can see and enjoy the latest Firedog logo in its latest version. The welcome page is here. Its archive is here.\nAnd add some compliments for Mozilla Firefox in the end. After all, Mozilla is one of the only few software companies I really respect.\n Such speed, much privacy, wow, very browser!\n From Reddit user AimHrimKleem\n","description":"","tags":["firefox","mozilla"],"title":"Firedog","uri":"/firedog/"},{"categories":["personal thoughts"],"content":" Categories and tags are very similar. They both allow you to organize content that can then be used in a variety of ways. However there are a few differences.\nCategories are best used for broad groupings of topics. For example, if you’re creating a site that reviews media, you might use categories such as Books or Film or TV.\nTags are much more specific topics that you want to use to associate related content. For example if you were creating a site that reviews media, you might want to use tags such as science fiction or horror or action adventure.\n From WordPress Support\n In an ideal world, we would use categories to group the content on your website into — say — eight to ten global segments. On our blog, these segments are for instance Analytics, Content SEO, eCommerce and Technical SEO. By maintaining a limited set of categories, you can keep your website, and your content focused. Now, of course, you can dissect the content even further, going to more particular groupings. For that, you should use tags.\n From Yoast SEO blog\nIn short, category means is while tag means has. It’s recommended that a post only has one category, which makes your content focused. However, tags are not so limited. You may have more than five tags for one post if necessary.\n","description":"","tags":["category","tag"],"title":"Categories vs. Tags","uri":"/categories-vs-tags/"},{"categories":["personal thoughts"],"content":"Beethoven wrote, ‘I recognise no sign of superiority in mankind other than goodness.’ Where the character is not great, there is no great man, there is not even a great artist, nor a great man of action; there are only idols unearthed for the cheap and short-lived applause of the multitude; time will efface them altogether. Outward success matters little. The only thing is to be great, not to appear so.\n","description":"","tags":null,"title":"To Be Great","uri":"/to-be-great/"},{"categories":["application usage"],"content":"Simply run either command below:\n1 2  uuidgen cat /proc/sys/kernel/random/uuid   Note: default UUID version is 4. To generate a time-based UUID, use the command below.\n1  uuidgen -t   ","description":"","tags":["uuid"],"title":"Generate UUID in Linux","uri":"/generate-uuid-in-linux/"},{"categories":["politics"],"content":"香港中评社记者: 据美联社报道, 该社与大西洋理事会共同开展的一项调查结果显示, 中国发起了可能是其首次全球虚假数字信息运动, 制作并传播关于美国制造新冠病毒作为生物武器的故事. 报道还称 2019 年以来, 中国在推特和脸书上的外交账号数量分别增加了三倍和两倍. 中方对此有何评论?\n华春莹: 我注意到这里有个 “可能”. 我不知道这个调查是怎么做的. 什么是虚假信息? 到底是谁在散布虚假信息? 我们看到疫情发生以来, 美西方社交媒体上充斥着大量的疫情阴谋论, 美国有些官员, 议员, 媒体, 机构在拿不出任何证据的情况下, 炮制和散布了大量针对中国的虚假信息, 无视基本事实, 对中国进行 “有罪推定” 式的抹黑和攻击. 一个简单的例子: 在已经被世界上几乎所有顶级科学家和疾控专家公开否定的情况下, 仍频频散布所谓的 “武汉病毒所泄露病毒” 等谣言谎言. 对此大家看得都非常清楚.\n说到推特账号数量, 不知道他们有没有调查过有多少外国媒体和外交官使用微信, 微博? 为什么外国人可以使用中国的社交媒体平台, 而中国人就不可以使用推特和脸书呢? 这只是增加一种同外国民众分享信息, 沟通交流的渠道而已. \n之所以出现这样的炒作, 根本原因就在于, 在溯源等问题上, 美西方一些人不愿意听到中方客观真实的声音, 害怕更多人了解事实真相, 以致于他们不能再肆无忌惮地散布虚假信息, 为所欲为地误导和垄断国际舆论.\n","description":"","tags":["china"],"title":"为什么外国人可以使用中国的社交媒体平台, 而中国人就不可以使用推特和脸书呢?","uri":"/why-chinese-cannot-use-twitter-and-facebook/"},{"categories":["application usage"],"content":"rar is a command tool for archiving and extracting rar files. Its official website is here.\nArchive $FILE to $FILE.rar:\n1  rar a $FILE $FILE   Archive all files in current directory to $FILE.rar:\n1  rar a $FILE *   Archive $FILE without compression:\n1  rar a -m0 $FILE $FILE   Archive $FILE with 10% recover record:\n1  rar a -rr10p $FILE $FILE   Archive $FOLDER and all its subdirectories to $FILE.rar:\n1  rar a -r $FILE $FOLDER   Archive $FILE with password $PASSWORD:\n1  rar a -p$PASSWORD $FILE $FILE   If you want the metadata encrypted too, use -hp instead of -p.\nArchive $FILE with split of 1 GiB:\n1  rar a -v1g $FILE $FILE   Archive $FOLDER and all its subdirectories with split of 2 GB, 10% recover record and password $PASSWORD, which encrypts all contents:\n1  rar a -r -rr10p -v2G -hp$PASSWORD $FOLDER $FOLDER   Note: G and g are different. G means 10003 bytes while g means 10243 bytes. The same is with M and m, K and k. Default unit is K.\nExtract $FILE.rar to current directory:\n1  rar x $FILE   Extract $FILE.rar with password $PASSWORD to directory $DIR:\n1  rar x -p$PASSWORD $FILE $DIR   You can see full usage from here.\n","description":"","tags":["rar"],"title":"Rar Usage","uri":"/rar-usage/"},{"categories":["web development"],"content":"Note: Apache on Linux is required.\nFirst, enable proxy_wstunnel module.\n1  a2enmod proxy_wstunnel   Second, add these lines below in VirtualHost area in /etc/apache2/sites-available/default-ssl.conf.\n1 2 3 4 5 6 7  \u003cLocationMatch \"/$PATH\"\u003e ProxyPass ws://127.0.0.1:$PORT/$PATH upgrade=WebSocket ProxyAddHeaders Off ProxyPreserveHost On RequestHeader set Host %{HTTP_HOST}s RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s \u003c/LocationMatch\u003e   $PATH and $PORT should be the same as those in V2Ray configuration.\nAt last, simply restart Apache.\n1  systemctl restart apache2   ","description":"","tags":["apache","v2ray"],"title":"Deploy V2Ray on an Existing Server","uri":"/deploy-v2ray-on-an-existing-server/"},{"categories":["web development"],"content":"When using cURL or other tools, sometimes we need a proper HTTP request header to avoid being identified as robots. Here are some examples.\nChrome on Linux (x64):\n1 2 3 4 5 6 7 8  curl '$URL' \\  -H 'cache-control: max-age=0' \\  -H 'dnt: 1' \\  -H 'upgrade-insecure-requests: 1' \\  -H 'user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36' \\  -H 'accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' \\  -H 'accept-language: zh-CN,zh;q=0.9' \\  --compressed   Firefox with privacy.resistFingerprinting setting to true:\n1 2 3 4 5 6 7 8 9 10  curl '$URL' \\  -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0' \\  -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' \\  -H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' \\  --compressed \\  -H 'DNT: 1' \\  -H 'Connection: keep-alive' \\  -H 'Upgrade-Insecure-Requests: 1' \\  -H 'Cache-Control: max-age=0' \\  -H 'TE: Trailers'   Besides, the User-Agent of Chrome on Windows 10 (x64) should be like this:\n1  Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36   The Accept-Language of visitors from the US should be like this:\n1  en-US,en;q=0.5   And Cache-Control can be set to no-store to bypass cache.\n","description":"","tags":["http header"],"title":"Proper HTTP Request Headers","uri":"/proper-http-request-headers/"},{"categories":["web development"],"content":"Cloudflare is a popular reverse proxy and CDN for WordPress site owners, mostly as it offers a convenient Free plan for personal sites and blogs. This plan provides access to Cloudflare’s global CDN, along with performance and security features, such as high quality video streaming, load balancing, HTTP/2, and DDoS protection. This article shows how to secure your websites with Cloudflare.\nProxy all traffic This is the most important step, which is to proxy as much traffic as possible in DNS setting. Otherwise, attackers can directly attack your host servers. It is also recommended to change your servers' IP addresses after proxying traffic.\nSet proper TLS mode Set SSL/TLS encryption mode in SSL/TLS setting to Full (Strict), which requires a trusted certificate. You can use Certbot or Cloudflare’s origin certificates. The latter is recommended, since certificates from Let’s Encrypt only last for 90 days, while those from Cloudflare can last for 15 years.\nGo to Origin Server and create a certificate. Remember to copy and paste public key and private key to files. Upload those files to your server and change your configuration properly.\nReject requests that bypass Cloudflare Set Authenticated Origin Pulls in Origin Server to on and do the following configuration in Apache.\nDownload the public key from here. Assume you upload it to folder $FOLDER in your web server.\nAdd these lines in proper area in /etc/apache2/sites-available/default-ssl.conf.\n1 2 3  SSLVerifyClient require SSLVerifyDepth 1 SSLCACertificateFile $FOLDER/origin-pull-ca.pem   Record visitors' IP addresses When using Cloudflare, your server can only receive requests from Cloudflare, since it acts as a reverse proxy. You may want to record visitors' real IP addresses.\nFirst, enable mod_remoteip.\n1  a2enmod remoteip   Second, add this line in proper area in /etc/apache2/sites-available/default-ssl.conf.\n1  RemoteIPHeader CF-Connecting-IP   Third, change all %h to %a in LogFormat entry in /etc/apache2/apache2.conf.\nThen create /etc/apache2/conf-available/remoteip.conf and add the following lines in it.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  RemoteIPHeader CF-Connecting-IP RemoteIPTrustedProxy 173.245.48.0/20 RemoteIPTrustedProxy 103.21.244.0/22 RemoteIPTrustedProxy 103.22.200.0/22 RemoteIPTrustedProxy 103.31.4.0/22 RemoteIPTrustedProxy 141.101.64.0/18 RemoteIPTrustedProxy 108.162.192.0/18 RemoteIPTrustedProxy 190.93.240.0/20 RemoteIPTrustedProxy 188.114.96.0/20 RemoteIPTrustedProxy 197.234.240.0/22 RemoteIPTrustedProxy 198.41.128.0/17 RemoteIPTrustedProxy 162.158.0.0/15 RemoteIPTrustedProxy 104.16.0.0/12 RemoteIPTrustedProxy 172.64.0.0/13 RemoteIPTrustedProxy 131.0.72.0/22 RemoteIPTrustedProxy 2400:cb00::/32 RemoteIPTrustedProxy 2606:4700::/32 RemoteIPTrustedProxy 2803:f800::/32 RemoteIPTrustedProxy 2405:b500::/32 RemoteIPTrustedProxy 2405:8100::/32 RemoteIPTrustedProxy 2a06:98c0::/29 RemoteIPTrustedProxy 2c0f:f248::/32   At last, restart Apache.\n1  systemctl restart apache2   ","description":"","tags":["cloudflare","tls"],"title":"Secure Sites with Cloudflare","uri":"/secure-sites-with-cloudflare/"},{"categories":["web development"],"content":"Trackers help make websites better. However, some visitors tend to block trackers. Here are ways to hide trackers so that they cannot be easily blocked.\nAlmost all ad and tracker blockers use regular expression to filter ads and trackers. So, we need to change the URLs of trackers and change parameters in the URLs.\nGive Matomo as an example. First, you should change the name of folder where Matomo is. Avoid direct names like matomo, which could make blockers find easily. You can use some common words, or just m. Also change the filename of used PHP or JS files. For example, change matomo.php to m.php and matomo.js to m.js.\nThen change parameters of URLs. For example, Matomo’s default tracking URL includes expression like ?action_name=, which is just in the EasyPrivacy list. Changing that to another expression, like ?the_action_name=, is simple but efficient. If you want to hide more deeply, just change that to common words. For example, ?apple= would never be thought as a tracker.\nIf you follow the steps above, your trackers may never be found or blocked. However, you still need to abide by the law, especially the GDPR. Make sure to anonymize data properly, delete expired data and destroy users' data when required.\n","description":"","tags":["tracker"],"title":"Hide Trackers","uri":"/hide-trackers/"},{"categories":["web development"],"content":"First, add a worker in Cloudflare. The code shoule be like this:\n1 2 3 4 5 6 7 8 9 10 11  addEventListener( \"fetch\", event =\u003e { let url = new URL(event.request.url); url.hostname = \"your-domain\"; url.protocol = \"https\"; let request = new Request(url, event.request); event.respondWith( fetch(request) ) } )   Then find a good Cloudflare IPv4 address. Full list is here. You can use better-cloudflare-ip to look for a good IP.\nFor Linux, download the latest source code from here. Then follow the commands below.\n1 2 3 4 5 6  tar -vxf linux.tar.gz cd linux ./configure make cd src sudo ./cf.sh   You may encounter a small bug when building. Open file src/fping.h and change line 14 to extern int random_data_flag;, then the bug will be fixed.\nAt last, change the address in V2Ray config to your ideal IPv4 address. Also change the host to your worker domain. That’s all.\n","description":"","tags":["cloudflare","v2ray"],"title":"Use Cloudflare to Secure V2Ray","uri":"/use-cloudflare-to-secure-v2ray/"},{"categories":["web development"],"content":"Optimize PHP config Open /etc/php/$VERSION/apache2/php.ini and change the values below.\n1 2 3 4 5 6  max_execution_time = 1800 max_input_time = 1800 memory_limit = 512M post_max_size = 512M upload_max_filesize = 512M max_file_uploads = 100   Install necessary PHP extensions Install GMP and BCMath.\n1 2  apt install php-gmp apt install php-bcmath   Remove unused softwares Remove snap completely.\n1 2  apt purge snapd apt autoremove   Optimize Apache config Open /etc/apache2/sites-available/default-ssl.conf and add the lines below in VirtualHost _default_:443 area.\n1 2 3 4 5 6 7  SSLProtocol -all +TLSv1.2 +TLSv1.3 SSLHonorCipherOrder On SSLCipherSuite EECDH+AES:EDH+AES:-SHA1:EECDH+RC4:EDH+RC4:RC4-SHA:EECDH+AES256:EDH+AES256:AES256-SHA:!aNULL:!eNULL:!EXP:!LOW:!MD5 RewriteEngine On RewriteCond %{HTTP_HOST} !^your-domain RewriteRule ^(.*) https://your-domain$1 [R=301]   Refuse visits via IP address Open /etc/apache2/sites-available/000-default.conf and /etc/apache2/sites-available/default-ssl.conf, then add the lines below in proper areas.\n1 2 3 4 5 6 7  \u003cVirtualHost *:$PORT\u003e ServerName $IP \u003cLocation /\u003e Order Allow,Deny Deny from all \u003c/Location\u003e \u003c/VirtualHost\u003e   ","description":"","tags":["wordpress"],"title":"Configuration After Installing WordPress","uri":"/configuration-after-installing-wordpress/"},{"categories":["system management"],"content":"Decrease swap usage Decrease the value of vm.swappiness, which represents the percentage of the free memory before activating swap. The lower the value, the less swapping is used and the more memory pages are kept in physical memory.\nThe default value is 60. You can check current value with either command below.\n1 2  cat /proc/sys/vm/swappiness sysctl vm.swappiness   Recommended value is 0. To change it permanently, you need to add the following line in /etc/sysctl.conf:\n1  vm.swappiness = 0   In some distributions, setting the value to 0 will lead to disabled swap. You may need to change the value to 1.\nDeal with dirty pages Set vm.dirty_background_ratio and vm.dirty_ratio properly. The former contains, as a percentage of total available memory that contains free pages and reclaimable pages, the number of pages at which the background kernel flusher threads will start writing out dirty data. And the latter contains, as a percentage of total available memory that contains free pages and reclaimable pages, the number of pages at which a process which is generating disk writes will itself start writing out dirty data.\nIn short, vm.dirty_background_ratio is the percentage of system memory which when dirty, system can start writing data to the disks, and vm.dirty_ratio is the percentage of system memory which when dirty, system will block the process that is doing writes and write out dirty pages to the disks.\nDefault values vary with different distributions. Check current values with the command below.\n1  sysctl -a | grep dirty   You can smooth IO with low value of vm.dirty_background_ratio and high value of vm.dirty_ratio. Recommended values are vm.dirty_background_ratio = 5 and vm.dirty_ratio = 80. Open /etc/sysctl.conf and add the two lines below to change it.\n1 2  vm.dirty_background_ratio = 5 vm.dirty_ratio = 80   And make sure vm.dirty_background_bytes and vm.dirty_bytes are both 0. Otherwise it will not take effect.\nCreate swap partition Create a 1 GiB swap as an example. Simply run the commands below.\n1 2 3 4  fallocate -l 1G /swap chmod 600 /swap mkswap /swap swapon /swap   To make the change permanent, open /etc/fstab and add the line below.\n1  /swap swap swap defaults 0 0   Run the command below to check current swap usage.\n1  swapon --show   If you want to remove swap, simply adjust the /etc/fstab file and reboot, then delete the swap file.\nDisable ping Add the line below in /etc/sysctl.conf.\n1  net.ipv4.icmp_echo_ignore_all = 1   Increase open file Add these lines in /etc/security/limits.conf.\n1 2  * soft nofile 16384 * hard nofile 16384   If that does not work, change * to your user name, e.g. root.\nUse this command to check current value.\n1  ulimit -n   ","description":"","tags":null,"title":"Tweaks for Linux","uri":"/tweaks-for-linux/"},{"categories":["sociology"],"content":"注：这是梁文道在 2013 年作的演讲。\n我不用微博，我也停用了 Facebook，这都是我们今天活在这个世界上面，大家觉得应该要具备的一些工具。\n但为什么我不用呢，这就是关于我今天要跟大家谈论的一个主题，社交媒体时代，我们的自我如何慢慢变得越来越大，这样的自我扩大的过程又怎么影响到了我们的公共生活。\n不如我们就先从一些人类存在的基本特征开始说起。\n我们人活在这个世界上，其中一个最古怪、最特别的地方就在于我们的脸和我们的声音，为什么呢？\n因为大部分人去认识一个人的时候，都是先看她的脸长得什么样子，我们对一个人的印象、记忆和认知，几乎都离不开我们对这个人的脸的形象的掌握。\n除了脸之外，第二个特征就是她的声音，我们听一个人的声音，然后这个声音进入我们脑海里，沉淀在记忆之中，也跟她的脸孔一样构成我们对一个人的印象。\n但我为什么说这个状态很奇怪呢，是因为我们每一个人，都没办法看到自己的脸，我可以看到我自己的手、自己的脚、自己的肚子，但是我没办法看到我的脸。\n除非在照镜子的时候，否则一个人不知道自己长什么样子，他不知道自己平常说话是什么样的表情，听别人说话的时候，又是用什么样的脸色。\n同样的我们的声音也是我们自己听不见的。\n大部分有录音经验的人都知道，我们在说话时，我们自己耳朵听到的声音跟人家听到的声音是不同的。\n那是因为我们大部分的声音是经过口腔、经过内耳传进我们的耳中，所以为什么我们首次用麦克风的时候，会发现麦克风出来的自己的声音，是如此陌生，好像不是自己的声音一样。\n因此我们可以说，原来我们每一个人对于我们自己最重要的一些东西，就是我们的脸孔跟我们的声音，我们自己是不认识的、陌生的，这偏偏都是别人认识我们最主要的途径。\n所以这样一个状态，就说明了一个人活在这个世界上面，他的基本的处境，就是没有一个人能够完全地认识自己，没有一个人能够完全了解自己。\n如果我们不能够认识自己、了解自己的话，我如何立身处世，如何建立一个对自己人格的肯定呢？\n所以我们需要依赖他人的目光。\n很多哲学家都告诉我们，我们人是需要通过他人的认同来知道自己是谁，知道自己是个什么样的人。\n不过好在今天这样的一个网络时代，我们都可以用一个虚拟的化身，用无数个名字在网上跟别人说话、往来。\n这时候人家看到我的脸孔，人家听到我的声音，是什么呢？\n这就是新时代带给我们的新的问题，我们回想一下，我们使用各种社交媒体的习惯与文化。\n比如说你在全世界最流行的 Facebook 上，张贴了一个新的 Post，我们大家要是看的话，我们应该要做一些反应。\nFacebook 格式已经限定我们最基本的反应是两条，一个就是 Like，一个就是不喜欢，对人家贴出来的东西，我们会告诉他我们喜欢或不喜欢，认同或不认同。\n而在那个贴东西的人来讲呢，他会很在意自己有没有得到其他人的认同和喜欢。\n慢慢的，所有喜欢 Facebook 的人开始有个习惯，他不仅要贴东西出来，他还要时时刻刻检查，我贴出来这个东西，也许是我的一只猫的照片，我帮我的狗洗澡的照片，我生日派对的照片，这些东西有多少人在喜欢，有多少人在传发。\n仿佛有越多人告诉我他们喜欢，他们在传发，我这个东西就越有价值。\n到了最后，总体而言，如果我的 Facebook 被我经营成很多人在 follow，很多人在转的话，就好像我这个人就得到了肯定，仿佛我成为了一个互联网时代的帅哥或者美女一样。\n这个年代，我在社交媒体上发布的东西就是我的声音，我的声音变得特别磁性，特别的娇美，于是我就能够确认我这个人活得有价值。\n所以夸张点讲，Facebook 上面有多少人喜欢你贴的东西，有多少人在 follow 你，就说明了你价值所在，但是这样的一个价值，其实又是操纵在其他人的手上面，我们于是就会变得很紧张，我们开始在意我的东西有没有人看呢。\n同样的情况也可以发现在我们中国比较流行的微博上。\n在微博里，我们比较计较的是，我每一条微博被转发、评论的次数有多少，我们动不动就要看一看，我刚刚说的一句话，转的人多么？\n又由于我们太在意这些东西，所以乃至于今天出现很奇怪的现象，就是我们居然可以在一些拍卖网站上去拍卖粉丝。\n我们为什么需要去做这样的事呢，这是因为我们把微博上我写的东西，有多少人看，多少人在意，当成是我这个人还值不值得存在，我的存在有没有意义的一个证据。\n在这样的一个情况底下，我们再回头看看，我们平常讲微博里我们用的一些字眼，比如粉丝。\n微博其实比 Twitter、Facebook 还要更极端，就是微博把所有的 followers、所有的朋友，都叫做粉丝。\n假如我的兄弟姐妹、我的父母、我的好友，我们会互相关心大家微博写些什么，发些什么东西，那么为什么我们就变成了对方粉丝，这样的一个关系呢？\n用粉丝这样的字眼，我觉得他完全击中了我们的心灵。\n在这个年代，我们都希望自己是明星，都希望自己被崇拜，希望自己被跟随。\n尤其是在我们中国的社交媒体里，如果你的微博粉丝够多，你还会得到升级、认证，成为名人，而成名在我们今天，是一件多么重要的事情。\n所以今天整个社交媒体，在我看来都是一个可以让自我无限膨胀，它在不断喂养那个像怪兽一样的自我，每天给我们很多的养分，让我们的自我变得越来越膨胀，越来越庞大。\n当大到一定程度的时候，我们再想想看，到底一开始这些媒体是用来干什么的呢？\n据说这些媒体是为了让我们能够跟别人更好的沟通，所谓沟通难道不就是为了能够听到其他人的话，了解其他人的想法吗？\n可是今天我们使用这样的工具的时候，我们可能大部分时间都不是太关心人家的想法，我们比较关心的是我自己的反应。\n举个例子，当有人贴了一条东西出来之后，我们觉得我需要去做一些反应，如果我没有反应，就仿佛我不存在一样。\n就好比吃饭，我们今天吃饭也跟以前的步骤不太一样了，菜上到桌上，我们要做的第一件事，不是拿筷子去夹，而是先拿照相机去拍。\n拍了之后，当然就是要去分享，如果不拍的话，我这顿饭其实是没有吃成的。\n所以同样地，如果我看到了一些的新闻，看到别人一些贴出来的东西，我不做反应，我也好想是不存在一样。\n我需要不断地反应，不断地表达自己，我不能够不表达自己，我们每一个人都忍住地要把自己摊开来。\n我们再想想看，这些社交工具，它要发挥的第二个功能据说是叫分享，这是我们这个年代的关键词之一。\n表面上看，微博或者 Twitter 似乎有一种日记的功能，然而以前的日记跟现在的微博有一个非常大的不同。\n以前的日记真的是一个人整理自己的工具、文体，这样的一种工具，等闲是不会让别人看到的，但是今天我们写微博的时候，我们是盼望大家都来看我的日记。\n我会觉得如果人家不看的话，我就没有意义了。而我怎么样让别人去看我的日记呢，我要想很多的方法去吸引人家，尽管我的日记可能很平庸，可能没有什么好记录。\n比如说我曾经见过这样的一个分享的案例，有这么一个朋友，他在微博上面，写他晚上在香港一个很有名的地方吃海鲜，他觉得很好，然后他把那些菜都拍了照片分享出来了。\n到了晚上之后，他又继续分享说他开始肚子痛，再晚一点的时候，他又报告给大家，他拉了两回肚子了。\n整个通宵里面，他在微博上面通告大家，他拉肚子拉了七八次，最后一次我再看的时候，已经到了天亮了，他已经去医院了。\n为什么我们会觉得我拉肚子是一件很值得跟人分享的事情，人家为什么会觉得你拉肚子是我们非常关心的事情，甚至于对不认识你的人而言都很重要呢？\n当然这样的例子听起来比较极端，但是它的确说明了我们在微博上分享的内容，也许比拉肚子好一点点，但也不至于好太多。\n当我们使用社交媒体时，我们最常发的就是一些庸常生活的记录，但这些庸常生活的记录，只要我分享出去了它就不再庸碌，不再平凡了。\n如果有人有反应，还在转发的话，拉肚子都拉得很有价值了，很有意思了，我的人也活的很有意思了。\n在这样的情况下，我们其实已经不会再在意人家说的话，而是更加在意的是人家有没有看到我，有没有注意到我。\n我们每天在网上，仿佛都在扯开喉咙大声吼叫，想把自己衣服扒光，告诉给别人听，快来看我，快来看我，你们快看看我。\n在这样的情况下，我们其实会变得越来越自我膨胀，ego 越来越大，我们自我中心越来越强。\n于是我们真正的健康公共生活所需要的基础，也许就会在这样的新时代的媒体文化底下被侵蚀掉。\n我说的公共生活的基础，就是每一个公民他们都能够去聆听其他公民的想法和意见，愿意去反省自己。\n但是我们今天没有时间反省自己，因为我们都在忙着分享自己。\n如果有人批评我，或者对我的分享没有好感的话，在这么迅速的媒体交往时代，我们通常会马上让自己的情绪先反应出来，而没有时间冷静地先静下来想想看。\n这跟鲁迅以前他们打笔仗不一样，那时候打笔仗的意思是，你今天写了一篇文章，可能三天后在报纸出现，被你骂的那个人，他在下个礼拜才能回应。\n这中间的时间差，会让双方有很多时间去思考和反省，但是今天我们时间差只有几秒钟的时间，是非常迅速的。\n在这么短的时间里，我们的反应大部分是情绪的反应，这样的一些情绪反应，通常带来的都是更加强烈的分歧或对立，这种分歧和对立本来都不必要闹到这样的地步。\n但是我们今天在网上所有的政治讨论，我们发现很多人，你不知道为什么，本来是很好的朋友，但是在互联网上，在 Twitter 上，越吵越厉害，吵到终于是至此绝交的地步，不能够再往来。\n这是因为这个工具扩大了他们自我，也扩大了他们每一个人的自我跟其他人的自我之间分裂。\n今天大部分人资讯的吸收，意见的表达也好，都是在网上完成的。\n而在网上完成这些，有一个很大的特点，就是部落化的状态。如果你有不同的立场，你只会去你偏好的那些网站去看。\n久而久之，我们大部分人我们在网上听那么多意见，听来听去，其实就是跟自己一样的意见，说了那么的话，得到的反应都很正面，也是因为他们本来就是跟我一模一样的人。\n于是就出现传播学上所讲的 Chamber Effect，像一个密室之中的回声，我们听到的话其实都是我自己言语的回声而已。\n如果你在社交媒体发表观点，慢慢慢慢你会开始发现，你的朋友跟你意见都一致了。\n因为原来跟你意见不同的人都已经走掉了，不再是你的朋友，在 Facebook 里，跟别人绝交是很容易的，按一下按钮就行了。\n那么现在那些和你意见不同的人都已经走了、绝交了，于是我每天都觉得这个世界的主流意见，就应该跟我天天在网上说的意见是一样的，因为我每天在网上听回来的，也都是跟我很相似的意见。\n于是我们，我们进入一个明明资讯如海量般庞大的互联网时代，进入了一个各种声音都存在，百花齐放的空间里，但是不晓得为什么，我们好像走进了一座镜厅，这座厅堂里，到处都是镜子，我无论往哪看，都只能看到自己的脸。\n它是一个密室，我无论跟谁说话我都只听到自己的回声。\n所以这样的一个时代，我非常担忧，我觉得它是一个把自我无限扩大，终于达到一个程度，会毁掉让我们每一个自我能够好好地一起生存，一起建立一个社会的地步。\n","description":"","tags":["speech"],"title":"互联网时代的自我","uri":"/self-in-the-internet-age/"},{"categories":["application usage"],"content":"Assume that your host computer is A, the other one that needs to login via SSH is B.\nFirst, generate keys.\nRun this command in both A and B:\n1  ssh-keygen   Then exchange public keys.\nCreate a file named authorized_keys in ~/.ssh in B. Open ~/.ssh/id_rsa.pub in A and copy its content to ~/.ssh/authorized_keys in B.\nCreate a file named authorized_keys in ~/.ssh in A. Open ~/.ssh/id_rsa.pub in B and copy its content to ~/.ssh/authorized_keys in A.\nNow you can get rid of password.\n","description":"","tags":["ssh"],"title":"SSH Login Without Password","uri":"/ssh-login-without-password/"},{"categories":["application usage"],"content":"I have generated my own PGP key. You can get my public key from Contact page.\nIf you want to send me encrypted files, you can follow the steps below.\nAssume that the file pending to send is $FILE, and my public key file is $KEY.\nIf this is the first time you send me encrypted files, you need follow all these steps. Otherwise, you just need to follow the last step.\nFirst, copy and paste my public key in Contact page to file $KEY.\nThen import my public key.\n1  gpg --import $KEY   Don’t forget to check the fingerprint. Make sure it’s the same as the one in Contact page.\n1  gpg --fingerprint yeahpeace   Now you can encrypt the file.\n1  gpg -e -r yeahpeace $FILE   And $FILE.gpg will be generated. Simply send me that file and that’s all.\n","description":"","tags":["gpg","pgp"],"title":"PGP Key Generate","uri":"/pgp-key-generate/"},{"categories":["programming"],"content":"Note: Linux kernel is needed.\nThis is an algorithm with only SHA-256 used.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #include \u003copenssl/sha.h\u003eusing namespace std; string sha256(const string \u0026amp;code) { char buf[2]; unsigned char hash[SHA256_DIGEST_LENGTH]; SHA256_CTX sha256; SHA256_Init(\u0026amp;sha256); SHA256_Update(\u0026amp;sha256, code.c_str(), code.size()); SHA256_Final(hash, \u0026amp;sha256); string key; for (int i = 0; i \u003c SHA256_DIGEST_LENGTH; i++) { snprintf(buf, 2, \"%02x\", hash[i]); key += buf; } return key; }   The algorithm below is more complicated.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  #include \u003copenssl/sha.h\u003eusing namespace std; string processCode(const string \u0026code) { string key = code; char buf[2]; unsigned char hash[SHA256_DIGEST_LENGTH], pos = 0; for (auto \u0026i : code) pos += i; SHA256_CTX sha256; SHA256_Init(\u0026sha256); for (int i = 0; i \u003c pos % 10 + 1; i++) { SHA256_Update(\u0026sha256, key.c_str(), key.size()); SHA256_Final(hash, \u0026sha256); key.clear(); for (int i = 0; i \u003c SHA256_DIGEST_LENGTH; i++) { snprintf(buf, 2, \"%02x\", hash[i]); key += buf; } } for (auto \u0026i : key) i -= pos; return key; }   ","description":"","tags":["sha256"],"title":"SHA-256 Implementation","uri":"/sha-256-implementation/"},{"categories":["other"],"content":"祝大家春节玉快, 阖家欢落, 万四如意!  我也祝你们大家, 春节玉快, 阖家欢落, 万四如意! 谢谢!\n","description":"","tags":null,"title":"新年快乐!","uri":"/happy-new-year/"},{"categories":["application usage"],"content":"Warning: V2Ray may be detected since its TLS Client Hello fingerprint is unique. See here.\nNote: Debian based system is required.\nAssume that your user role is root.\nInstall Run these commands:\n1 2 3  bash \u003c(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh) apt install nginx apt install certbot   Configure Open /etc/nginx/conf.d/default.conf and replace its content with this:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  server { listen 80; server_name www.your-domain your-domain; return 301 https://your-domain; } server { listen 443 ssl; server_name www.your-domain your-domain; ssl_certificate /etc/letsencrypt/live/your-domain/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/your-domain/privkey.pem; location / { root /usr/share/nginx/html; index index.html; } location /$PATH { proxy_redirect off; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; proxy_set_header Host $http_host; proxy_pass http://127.0.0.1:$PORT; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 10m; keepalive_requests 10000; } sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 10m; keepalive_requests 10000; ssl_protocols TLSv1.2; ssl_ciphers HIGH:!aNULL:!MD5; ssl_ecdh_curve auto; ssl_prefer_server_ciphers on; ssl_session_cache shared:SSL:10m; ssl_session_timeout 10m; ssl_session_tickets off; }   $PATH should be a complex string but only consists letters and numbers, and $PORT should be a proper port.\nThen open /usr/local/etc/v2ray/config.json and replace its content with this:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  { \"inbounds\": [ { \"port\": $PORT, \"listen\": \"127.0.0.1\", \"protocol\": \"vmess\", \"settings\": { \"clients\": [ { \"id\": \"$UUID\", \"alterId\": 4 } ] }, \"streamSettings\": { \"network\": \"ws\", \"wsSettings\": { \"path\": \"/$PATH\" } } } ], \"outbounds\": [ { \"protocol\": \"freedom\" } ] }   $UUID should be a proper UUID.\nUse CertBot to obtain a TLS certificate:\n1  certbot certonly --standalone --agree-tos --register-unsafely-without-email -d your-domain -d www.your-domain   At last, give proper permissions:\n1  chown -R www-data:www-data /usr/share/nginx   You may also want to make your site similar to normal websites. You can choose your favorite website template, or you can download one from here. Then unzip it and replace /usr/share/nginx/html with extracted folder.\nRun Simply run these commands:\n1 2  systemctl enable nginx --now systemctl enable v2ray --now   ","description":"","tags":["nginx","v2ray","vmess"],"title":"Deploy a V2Ray Server","uri":"/deploy-a-v2ray-server/"},{"categories":["web development"],"content":"Note: this post is just for archiving.\nBleepComputer’s original post has been deleted. You can see it from here.\nBleepComputer’s removal notice is here.\nThe issue that still exists in Signal-TLS-Proxy is here. Its archive is here.\nAt present, main discussion places are here and here.\n","description":"","tags":["signal","tls"],"title":"About Signal’s TLS Proxy","uri":"/about-signal-tls-proxy/"},{"categories":["application usage"],"content":"Note: Ubuntu 18.04 LTS or later is recommended.\nAssume that your user role is root.\nInstall Run these commands:\n1 2 3  snap install core snap install shadowsocks-libev --edge apt install -y ufw   Configure Open /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json and replace its content with the configuration below:\n1 2 3 4 5 6 7 8  { \"server\":[\"::0\",\"0.0.0.0\"], \"server_port\":$PORT, \"encryption_method\":\"chacha20-ietf-poly1305\", \"password\":\"$PASSWORD\", \"mode\":\"tcp_only\", \"fast_open\":false }   $PORT should be an integer between 1024 and 65535, and $PASSWORD should be a strong password.\nRun these commands to enable firewall:\n1 2 3  ufw allow ssh ufw allow $PORT/tcp ufw enable   Run Simply run this command:\n1  systemctl enable snap.shadowsocks-libev.ss-server-daemon.service --now   ","description":"","tags":["shadowsocks"],"title":"Deploy a Shadowsocks Server","uri":"/deploy-a-shadowsocks-server/"},{"categories":["other"],"content":"玩法见以下视频 (讲得很详细).  来源: YouTube\n","description":"","tags":["game"],"title":"妙探寻凶 (Clue)","uri":"/clue/"},{"categories":["application usage"],"content":"To make WordPress sites more powerful and easier to use, I choose to use some plugins. These are what I am using and recommend.\n( in alphabet order )\n1. CodeMirror Blocks Support syntax highlight and comfortable background for code.\n2. Creative Commons Offer Creative Commons license for posts and pages.\n3. PDF Poster Embed PDF files in posts and pages.\n4. Post SMTP Provide basic support for sending emails.\n5. WP-Optimize – Clean, Compress, Cache Optimize the WordPress database.\n6. Yoast SEO Support search engine optimization.\n","description":"","tags":["wordpress"],"title":"Recommended WordPress Plugins","uri":"/recommended-wordpress-plugins/"},{"categories":["programming"],"content":"最近用 C++ 写一个基于终端的简单游戏时, 用到了 Linux 终端的一些控制方式. 整理一下以备查阅.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  //显示光标 void cursorHide() { cout \u003c\u003c \"\\033[?25l\" \u003c\u003c flush; } //隐藏光标 void cursorShow() { cout \u003c\u003c \"\\033[?25h\" \u003c\u003c flush; } //光标定位到第y行第x列, 也就是坐标(x,y) void cursorLocate(int x, int y) { cout \u003c\u003c \"\\033[\" \u003c\u003c y \u003c\u003c \";\" \u003c\u003c x \u003c\u003c \"H\" \u003c\u003c flush; } //清除第y行的内容 void clearLine(int y) { cout \u003c\u003c \"\\033[\" \u003c\u003c y \u003c\u003c \";1H\" \u003c\u003c flush; cout \u003c\u003c \"\\033[K\" \u003c\u003c flush; } //设置终端前景或背景为指定颜色 void setColor(int color) { cout \u003c\u003c \"\\033[\" \u003c\u003c color \u003c\u003c \"m\" \u003c\u003c flush; } //恢复设置为默认值 void reset() { cout \u003c\u003c \"\\033[0m\" \u003c\u003c flush; }   终端字体和背景的颜色如下:\n   前景颜色值 背景颜色值 颜色     30 40 黑色   31 41 红色   32 42 绿色   33 43 棕色   34 44 蓝色   35 45 品红色   36 46 孔雀蓝色   37 47 白色    以上是常用的控制. 更多信息, 参考这里.\n","description":"","tags":["cpp","terminal"],"title":"Linux 控制终端","uri":"/control-terminal-on-linux/"},{"categories":["politics"],"content":"Forward from Atlantic Council.\nOriginal address: https://www.atlanticcouncil.org/wp-content/uploads/2021/01/The-Longer-Telegram-Toward-A-New-American-China-Strategy.pdf\nYou may also see it here.\n","description":"","tags":["america","china"],"title":"The Longer Telegram: Toward a new American China strategy","uri":"/the-longer-telegram-toward-a-new-american-china-strategy/"},{"categories":["application usage"],"content":"You-Get 是什么? You-Get 是一个常用的视频下载工具, 使用 Python 编写, 开源发布在 Github 上并可以通过 pip 安装.\nGithub 上的项目主页: https://github.com/soimort/you-get\n为什么要修改文件名最大长度? 先谈一个话题: 文件系统对文件名长度的限制.\n几乎所有文件系统对文件名长度都有限制, 例如, ext4, Btrfs 的限制是 255 bytes, NTFS 的限制是 255 characters. 更多的文件系统限制信息可以参考维基百科——文件系统的对比页面.\n值得注意的是, 以上几个文件系统的例子中, 我特意强调了 byte 与 character 的区别. 对英文来说, 1 character = 1 byte, 而其他语言, 尤其是亚洲语系, 每个字符通常占用 2 ~ 3 个字节. 至于为什么是这个数字, 就要扯到 Unicode 字符集和 UTF-8 编码了, 这些日后再谈.\n换言之, 在涉及文件操作的软件开发过程中, 对文件名长度进行适当限制是必需的. 保守起见, 将长度限制设为 255 / 3 = 85, 甚至是 80 个字符似乎都是很有必要的.\nYou-Get 的开发者就是这样设计的.\n但这也带来了问题: 在用 You-Get 执行下载时, 常常会因为所下载视频名称的字符数达到了 80 的限制而导致视频名称被强行截断, 特别是在下载 bilibili 视频的时候. 详情可以看这个 issue (You-Get 使用 pr 作为 issue 区).\n出现这种情况时, 往往不是视频名称的长度真正超过了文件系统的限制, 而是由于名称中包含了相当一部分英文导致 80 的 “名额” 被抢占了.\n彻底一点的解决方案当然是添加计算真正的字节数的模块, 并使其不超过 255. 但这需要针对不同的系统编码环境做适配, 这也是面临的主要障碍. 例如, 尽管在至少十年前几乎所有 Linux 发行版就统一采用 UTF-8 作为系统编码, 但直到现在 Windows 的简体中文版仍然使用 GBK 作为文件名的编码. 这就使得同一个汉字, 在 Linux 下是 3 字节长度, 在 Windows 下却可能是 2 字节长度, 给计算字节数带来相当不便. 更遑论 Windows 的日文版同样未使用 UTF-8, 而是使用 Shift JIS 编码. 在目前的文档编码流行度中, 居于 UTF-8 之后的正是 Shift JIS 和 GB 2312 (GBK 的前身), 也可谓是另一种意义上的 “有名” 了.\n简单的解决方案倒是有. You-Get 对文件名的截断操作在 fs.py 文件中. 对于 Linux, 这一文件应当在 /usr/lib/python-version/site-packages/you_get/util 目录或者 /home/$USER/.local/lib/python-version/site-packages/you_get/util 目录下. 文件的倒数第二行应当如下:\n1  text = text[:80] # Trim to 82 Unicode characters long   将 80 修改为较大的数值即可. 比如, 修改为 200:\n1 2  # used to be 80 text = text[:200] # Trim to 82 Unicode characters long   建议添加注释, 以便在出问题时能够还原.\n","description":"","tags":["you-get"],"title":"You-Get 修改文件名最大长度","uri":"/you-get-modify-filename-max-length-limit/"},{"categories":["politics"],"content":"香港记者:  来源: YouTube\n国机二院:  来源: YouTube\n华莱士:  来源: YouTube\n","description":"","tags":["china"],"title":"蛤?","uri":"/that-man/"},{"categories":["web development"],"content":"什么是 HSTS?  HTTP严格传输安全 (英语: HTTP Strict Transport Security, 缩写: HSTS)是一套由互联网工程任务组发布的互联网安全策略机制. 网站可以选择使用HSTS策略, 来让浏览器强制使用HTTPS与网站进行通信, 以减少会话劫持风险.\n 来自维基百科——HTTP严格传输安全\n看样子很棒, 并且在 TLS 证书很容易获得的当下, 似乎为了用户的安全应当部署 HSTS. 但 HSTS 有个问题, 就是:\n 用户首次访问某网站是不受HSTS保护的. 这是因为首次访问时, 浏览器还未收到HSTS, 所以仍有可能通过明文HTTP来访问.\n 来自维基百科——HTTP严格传输安全\n这怎么办呢? 聪明的浏览器厂商们 (特指 Mozilla 和 Google)想了个办法, 只要浏览器内置一个域名列表, 列表里包含启用 HSTS 的域名, 那么只要用户访问这些域名, 就会不可逆地跳转至相应 https 页面.\n以上所说的那个域名列表, 就是 HSTS 预加载列表.\nHSTS 与 HSTS 预加载的最重要区别, 是当用户第一次以 http 方式访问网站时, 仅启用了 HSTS 的网站 (如果没有设置 http 跳转至 https 的话)仍会以 http 方式访问, 而启用 HSTS 预加载后, 无论网站是否设置跳转, 都会且只能以 https 方式访问.\n为了不引起混淆, 我特意另起一段写另外的情景: 启用了 HSTS 后 (无论是否预加载), 只要用户有过对网站的访问 (不是第一次), 浏览器就会记住这个网站启用了 HSTS, 并在未来的一段时间内 (时间长度由网站设置并且在每次访问时都会更新)只能以 https 方式访问.\n所以, 两者唯一的区别在于, HSTS 预加载防止了可能出现的 “第一次访问就被攻击” 情况, 也就是浏览器还没来得及读取网站是否启用了 HSTS 就被攻击了. 换言之, HSTS 预加载是 HSTS 的 “加强版”.\n为什么不要启用 HSTS? 既然 HSTS 这么好, 为什么不启用它, 甚至是启用预加载呢?\n这就提及到一个经典问题: 安全性与便利性的平衡. HSTS 固然强化了安全性, 但也使得用户无法通过 http 方式访问网站. 如果你的 TLS 证书过期, 或者出于一些原因无法提供合法的 https 加密, 那么你的网站就会完全无法访问. 这对任何一个站点来说都是不可接受的.\n说到这里, 就提及另外一个问题: 什么样的网站才真正需要 HSTS?\n像 Google, Microsoft, Amazon 这种靠云服务吃饭的企业当然需要, 涉及支付的 Paypal, Alipay 当然也需要, 依赖加密通信的 Signal, Telegram, Tutanota 同样需要. 那么一个由个人搭建并维护的博客, 不涉及支付, 就连评论功能也支持匿名的这样一个站点是否需要呢?\n答案当然见仁见智. 这个站点的某些域名之前用来搭配 V2Ray 科学上网, 所以为了安全与隐私配置了 HSTS 预加载, 而现在我正在努力移除它. 毕竟在我看来, 配置一个 http 跳转 https 就足够了, 没必要冒着无法访问的风险过于追求所谓 “安全性”.\n最后附上 HSTS 预加载提交的网站, MDN 上关于 HSTS 的介绍, 移除 HSTS 预加载的网站, 以及 Firefox 内置的 HSTS 预加载列表.\n","description":"","tags":["hsts"],"title":"不要启用 HSTS!","uri":"/do-not-enable-hsts/"},{"categories":["web development"],"content":"以下命令均基于 root 用户, shell 目录为 /root.\n在执行本文的操作前, 检查是否满足以下条件:\n 有一个带有静态 IPv4 地址的主机 有一个域名 域名的 A 记录指向主机的 IPv4 地址 主机系统为 Debian 系 (最好是 Ubuntu 20.10)  一, 升级系统 1 2 3  apt update apt upgrade apt autoremove   二, 安装必需软件 1 2 3 4  apt install apache2 apt install mysql-server apt install php apt install phpmyadmin   安装 MySQL 时可能出现内存不够导致安装失败的情况, 可以通过如下命令创建虚拟内存:\n1 2 3 4  mkdir /swap dd if=/dev/zero of=/swap/swapfile bs=4k count=512000 mkswap /swap/swapfile swapon /swap/swapfile   以上命令创建了约 2 GB 的虚拟内存, 但重启后就无效了, 因为没有设置开机挂载. 想要永久生效, 须修改 /etc/fstab 文件, 添加如下一行:\n1  /swap/swapfile swap swap defaults 0 0   安装 phpMyAdmin 时会弹出两个窗口, 第一个是选择网络服务器, 按上下键将光标移至 apache2 后按空格键选中, 然后按 Tab 将光标移至 OK, 最后按下回车确认.\n第二个会询问是否使用 dbconfig-common 设置数据库, 选择 Yes, 然后设置密码并确认.\n三, 配置 TLS 证书 首先安装 Certbot:\n1  apt install certbot   确保关闭 Apache 后申请证书:\n1 2  systemctl stop apache2 certbot certonly --standalone --agree-tos --register-unsafely-without-email -d your-domain -d www.your-domain   创建符号链接以启用 Apache 上的 https 页面:\n1  ln -s /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-enabled/default-ssl.conf   编辑 /etc/apache2/sites-available/default-ssl.conf 文件, 修改这两行:\n1 2  SSLCertificateFile /etc/letsencrypt/live/your-domain/fullchain.pem SSLCertificateKeyFile /etc/letsencrypt/live/your-domain/privkey.pem   再在 VirtualHost 区内添加这一行以移除 HSTS. 如果你不知道 HSTS 是什么, 请忽略这一步和下一步, 直接进入 “启用 Apache 的 SSL 模块” 部分 (关于这个, 我在这篇文章中给予了说明):\n1  Header always set Strict-Transport-Security \"max-age=0\"   还需启用 Apache 的 Headers 模块:\n1  a2enmod headers   启用 Apache 的 SSL 模块:\n1  a2enmod ssl   编辑 /etc/apache2/sites-available/000-default.conf 文件, 在 VirtualHost 区内添加这三行以强制 http 转 https:\n1 2 3  RewriteEngine on RewriteCond %{HTTPS} !=on RewriteRule ^(.*) https://%{SERVER_NAME}$1 [R=301]   还需启用 Apache 的 Rewrite 模块:\n1  a2enmod rewrite   四, 安装 WordPress 下载, 解压, 复制 WordPress 到 Apache 目录, 并删除 Apache 原有的默认主页:\n1 2 3 4  wget https://wordpress.org/latest.tar.gz tar -zxvf latest.tar.gz rm /var/www/html/index.html cp -rf wordpress/* /var/www/html   授予权限:\n1  chown -R www-data:www-data /var/www   启用 php 的 mbstring 插件:\n1  phpenmod mbstring   为更改 MySQL 的 root 账户认证方式, 需在 MySQL 的 shell 环境下操作. 先进入 MySQL 的 shell 环境:\n1  mysql   输入以下命令以查询当前的账户认证方式:\n1  SELECT user,authentication_string,plugin,host FROM mysql.user;   root 用户的插件使用的是 auth_socket, 需要修改为 mysql_native_password.\n输入以下命令以修改:\n1 2  ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '$PASSWORD'; FLUSH PRIVILEGES;   其中 $PASSWORD 是 root 用户的密码.\n再次查询账户认证方式, 就能发现修改成功了.\n启动 Apache:\n1  systemctl enable apache2 --now   浏览器打开 https://your-domain/phpadmin 就能进入数据库后台了, 输入 root 密码登录, 新建一个数据库给 WordPress 使用.\n浏览器打开 https://your-domain, 开始配置 WordPress, 输入刚才新建的数据库名称和密码, 并创建一个账号, 重新登录就完成了博客的搭建.\nWordPress 后台地址为 https://your-domain/wp-admin.\n五, 一些说明 如果执行 WordPress 的站点健康检测, 可能会提示 imagick 没有安装, 可以执行以下命令安装:\n1  apt install php-imagick   如果想使用 WordPress 固定链接的 “文章名” 模式, 需要修改 /etc/apache2/apache2.conf 文件. 将 Directory /var/www/ 区内的 Options 和 AllowOverride 所在的两行修改为以下内容:\n1 2  Options FollowSymLinks AllowOverride All   然后重启即可.\n","description":"","tags":["wordpress"],"title":"Ubuntu 20.10 上搭建 WordPress 博客","uri":"/deploy-wordpress-blog-on-ubuntu/"},{"categories":null,"content":"You can contact me via email, or telegram.\nEmail: me@yeahpeace.com\nTelegram: O2aRIUuS\nThis is my PGP public key:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  -----BEGIN PGP PUBLIC KEY BLOCK----- mQENBGAnQpoBCADTKK5h5Xc4P2pco6rmfWhRLFoFgzmI+V3rAZhzmlpHgRz1zoVD b3txcjOjoTcult7aUjY4RM/nidu4IAD47WI5kVVxt92+AsFfClR6OjdikbSuTQlU EfJOn6iPygBMuvvuhBeVu6EOZd8XU19cNkGQjiGrZERSuqtPaEykGGP+5WuhLRrc bFJPLJApRKc8hoXHsVuJmpGrypY9+txuTWPQsVBfiMEjJwIRi6zwZxwZiW26Br35 4vWXABLZE7WO7QXwbSKcLojF2ORHi35EiB+sAq6+UZIwybRz3PHF8tyHeFZlH0U1 2esf/jxsQtmLS7Qvh+/1ArSZ37lK7wBoMt9dABEBAAG0F3llYWhwZWFjZSA8bWVA aW15cC54eXo+iQFOBBMBCAA4FiEEpPVCP2r5AOdyyeFxhR6PQL7nzRkFAmAnQpoC GwMFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQhR6PQL7nzRkoawf/a3IoY/te KGlo/OqZV44P7a72Kb5vYvie1SCvFVVo0m1qYbOBblEw4VDGS+0NgUCzoW70+QV6 864VYMXMQ+xaBtA4JGpEFZyKDFJF8KpuESgO+shnih6adZRwoxpLaWpCp+7pLDqE /AfjjgV0LVcQHyzfKI+2JlPtlPgHlZd8u0g4EhYWSNm2B3TB6NF/V5HqtIyv4fIF cibDg/hQxLooJrLZ2gR/9A4ocRbf3Dp4YfUQTABbf1ipEgTW//M9TnhkGcZdIXtj k9ao2M7yU/iEXpxl/Coht/SqhaqHnuGs4YxRrdMDLvVK0BLuKLkd2uEjr9n5ihwz cB8t9g/jzztNfrkBDQRgJ0KaAQgAsJcxI8ipjly0N0x9K/a6T2DxFYiYyDqUCsjR LaiFhmmS5YIocIfhuqXvlypAugI2V6nJPZ7+EKPs3hSGNyV1g6jbucyHXElY5mxM PhRxXshrWiHNArKP+/LW6V+OaXhRkzI+RVjMR3uOXaCmjmEfDN7dsYulThNOiuAt tU4+WFL0ZbhNrhHfCNv2hH2QYp19FSn530307CH8wuZoKw0i64kg5k524kxDYGI1 j0crB4ItT+9GQ9Zr46pD1kDu5f9VeQaKSFwDe8Np25oVgEn+Et/s3FxU+u1QC37K 8sPrfvOMfmN08UkrQ5iHHrrNABFMgd0Rsgs0b57TPfwCcy8uAQARAQABiQE2BBgB CAAgFiEEpPVCP2r5AOdyyeFxhR6PQL7nzRkFAmAnQpoCGwwACgkQhR6PQL7nzRnz lwgAxzVzhbvTqfhKKjR4CIS7YdMB0oHhTko+H7tumnt5ICOVZdEdSIei3dvr7Lo3 fKNCE4lOuos8tw4GScBIXH+7bW3BX6wMTdqPPcpup/o00jaSgLmuhTehehnKzDy9 e/TO12IyzJkuOr1iiNwtkaGFZuGrX9xFfvYQOgm8uKAABfFxTp1nQmEVbuM2LqTM 2XThxY+4EvDHcv4dHY9WfZH7eO2vwpJYHITOpK5CkzHiEcmKoHx+fyINhSuBKwMA 6w3df0Q6MHowVznibNvHpNinAYOUZTry5byepviVlKkKP9Pnc6Rv4y6lkK74xmFx 7N6PCeqIPdWsTzfdlrxZnI8SCw== =PggM -----END PGP PUBLIC KEY BLOCK-----   The public key has been uploaded to key servers.\nThis is the fingerprint:\n1  A4F5 423F 6AF9 00E7 72C9 E171 851E 8F40 BEE7 CD19   ","description":"","tags":null,"title":"Contact","uri":"/contact/"}]
